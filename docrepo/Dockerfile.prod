###########
# BUILDER #
###########

# pull official base image
FROM python:3.12.5-alpine as builder

# set work directory
WORKDIR /usr/src/docrepo

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8==6.1.0
COPY . .
RUN flake8 --ignore=E501,F401,F403,W503 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/docrepo/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.12.5-alpine

# create directory for the app user
RUN mkdir -p /home/docrepo

# create the app user
RUN addgroup -S docrepo && adduser -S docrepo -G docrepo

# create the appropriate directories
ENV HOME=/home/docrepo
ENV APP_HOME=/home/docrepo/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/docrepo/wheels /wheels
COPY --from=builder /usr/src/docrepo/requirements.txt .
RUN pip install --no-cache /wheels/*

# for transformations app
RUN apk add openjdk21
RUN apk add libreoffice
RUN apk add --no-cache msttcorefonts-installer fontconfig
RUN update-ms-fonts

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY apps $APP_HOME/apps
COPY config $APP_HOME/config
COPY mediafiles $APP_HOME/mediafiles
COPY staticfiles $APP_HOME/staticfiles
COPY extensions $APP_HOME/extensions
COPY ./.env.prod $APP_HOME/.env
COPY manage.py $APP_HOME/manage.py

# chown all the files to the app user
RUN chown -R docrepo:docrepo $APP_HOME

# change to the app user
USER docrepo

# run entrypoint.prod.sh
ENTRYPOINT ["/home/docrepo/web/entrypoint.prod.sh"]
